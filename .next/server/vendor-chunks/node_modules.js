/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/node_modules";
exports.ids = ["vendor-chunks/node_modules"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/node_modules/node-gyp-build/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/.pnpm/node_modules/node-gyp-build/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const runtimeRequire =  true ? require : 0 // eslint-disable-line\r\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\r\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\r\n} else { // else use the runtime version here\r\n  module.exports = __webpack_require__(/*! ./node-gyp-build.js */ \"(rsc)/./node_modules/.pnpm/node_modules/node-gyp-build/node-gyp-build.js\")\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbm9kZV9tb2R1bGVzL25vZGUtZ3lwLWJ1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixLQUF5QyxHQUFHLE9BQXVCLEdBQUcsQ0FBTztBQUNwRyxrREFBa0Q7QUFDbEQ7QUFDQSxFQUFFLE9BQU87QUFDVCxFQUFFLDJJQUErQztBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy8ucG5wbS9ub2RlX21vZHVsZXMvbm9kZS1neXAtYnVpbGQvaW5kZXguanM/NDg5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBydW50aW1lUmVxdWlyZSA9IHR5cGVvZiBfX3dlYnBhY2tfcmVxdWlyZV9fID09PSAnZnVuY3Rpb24nID8gX19ub25fd2VicGFja19yZXF1aXJlX18gOiByZXF1aXJlIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcclxuaWYgKHR5cGVvZiBydW50aW1lUmVxdWlyZS5hZGRvbiA9PT0gJ2Z1bmN0aW9uJykgeyAvLyBpZiB0aGUgcGxhdGZvcm0gc3VwcG9ydHMgbmF0aXZlIHJlc29sdmluZyBwcmVmZXIgdGhhdFxyXG4gIG1vZHVsZS5leHBvcnRzID0gcnVudGltZVJlcXVpcmUuYWRkb24uYmluZChydW50aW1lUmVxdWlyZSlcclxufSBlbHNlIHsgLy8gZWxzZSB1c2UgdGhlIHJ1bnRpbWUgdmVyc2lvbiBoZXJlXHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL25vZGUtZ3lwLWJ1aWxkLmpzJylcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/node_modules/node-gyp-build/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/node_modules/node-gyp-build/node-gyp-build.js":
/*!**************************************************************************!*\
  !*** ./node_modules/.pnpm/node_modules/node-gyp-build/node-gyp-build.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\")\r\nvar path = __webpack_require__(/*! path */ \"path\")\r\nvar os = __webpack_require__(/*! os */ \"os\")\r\n\r\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\r\nvar runtimeRequire =  true ? require : 0 // eslint-disable-line\r\n\r\nvar vars = (process.config && process.config.variables) || {}\r\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\r\nvar abi = process.versions.modules // TODO: support old node where this is undef\r\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\r\n\r\nvar arch = process.env.npm_config_arch || os.arch()\r\nvar platform = process.env.npm_config_platform || os.platform()\r\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\r\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\r\nvar uv = (process.versions.uv || '').split('.')[0]\r\n\r\nmodule.exports = load\r\n\r\nfunction load (dir) {\r\n  return runtimeRequire(load.resolve(dir))\r\n}\r\n\r\nload.resolve = load.path = function (dir) {\r\n  dir = path.resolve(dir || '.')\r\n\r\n  try {\r\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\r\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\r\n  } catch (err) {}\r\n\r\n  if (!prebuildsOnly) {\r\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\r\n    if (release) return release\r\n\r\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\r\n    if (debug) return debug\r\n  }\r\n\r\n  var prebuild = resolve(dir)\r\n  if (prebuild) return prebuild\r\n\r\n  var nearby = resolve(path.dirname(process.execPath))\r\n  if (nearby) return nearby\r\n\r\n  var target = [\r\n    'platform=' + platform,\r\n    'arch=' + arch,\r\n    'runtime=' + runtime,\r\n    'abi=' + abi,\r\n    'uv=' + uv,\r\n    armv ? 'armv=' + armv : '',\r\n    'libc=' + libc,\r\n    'node=' + process.versions.node,\r\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\r\n     true ? 'webpack=true' : 0 // eslint-disable-line\r\n  ].filter(Boolean).join(' ')\r\n\r\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\r\n\r\n  function resolve (dir) {\r\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\r\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\r\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\r\n    if (!tuple) return\r\n\r\n    // Find most specific flavor first\r\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\r\n    var parsed = readdirSync(prebuilds).map(parseTags)\r\n    var candidates = parsed.filter(matchTags(runtime, abi))\r\n    var winner = candidates.sort(compareTags(runtime))[0]\r\n    if (winner) return path.join(prebuilds, winner.file)\r\n  }\r\n}\r\n\r\nfunction readdirSync (dir) {\r\n  try {\r\n    return fs.readdirSync(dir)\r\n  } catch (err) {\r\n    return []\r\n  }\r\n}\r\n\r\nfunction getFirst (dir, filter) {\r\n  var files = readdirSync(dir).filter(filter)\r\n  return files[0] && path.join(dir, files[0])\r\n}\r\n\r\nfunction matchBuild (name) {\r\n  return /\\.node$/.test(name)\r\n}\r\n\r\nfunction parseTuple (name) {\r\n  // Example: darwin-x64+arm64\r\n  var arr = name.split('-')\r\n  if (arr.length !== 2) return\r\n\r\n  var platform = arr[0]\r\n  var architectures = arr[1].split('+')\r\n\r\n  if (!platform) return\r\n  if (!architectures.length) return\r\n  if (!architectures.every(Boolean)) return\r\n\r\n  return { name, platform, architectures }\r\n}\r\n\r\nfunction matchTuple (platform, arch) {\r\n  return function (tuple) {\r\n    if (tuple == null) return false\r\n    if (tuple.platform !== platform) return false\r\n    return tuple.architectures.includes(arch)\r\n  }\r\n}\r\n\r\nfunction compareTuples (a, b) {\r\n  // Prefer single-arch prebuilds over multi-arch\r\n  return a.architectures.length - b.architectures.length\r\n}\r\n\r\nfunction parseTags (file) {\r\n  var arr = file.split('.')\r\n  var extension = arr.pop()\r\n  var tags = { file: file, specificity: 0 }\r\n\r\n  if (extension !== 'node') return\r\n\r\n  for (var i = 0; i < arr.length; i++) {\r\n    var tag = arr[i]\r\n\r\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\r\n      tags.runtime = tag\r\n    } else if (tag === 'napi') {\r\n      tags.napi = true\r\n    } else if (tag.slice(0, 3) === 'abi') {\r\n      tags.abi = tag.slice(3)\r\n    } else if (tag.slice(0, 2) === 'uv') {\r\n      tags.uv = tag.slice(2)\r\n    } else if (tag.slice(0, 4) === 'armv') {\r\n      tags.armv = tag.slice(4)\r\n    } else if (tag === 'glibc' || tag === 'musl') {\r\n      tags.libc = tag\r\n    } else {\r\n      continue\r\n    }\r\n\r\n    tags.specificity++\r\n  }\r\n\r\n  return tags\r\n}\r\n\r\nfunction matchTags (runtime, abi) {\r\n  return function (tags) {\r\n    if (tags == null) return false\r\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\r\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\r\n    if (tags.uv && tags.uv !== uv) return false\r\n    if (tags.armv && tags.armv !== armv) return false\r\n    if (tags.libc && tags.libc !== libc) return false\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nfunction runtimeAgnostic (tags) {\r\n  return tags.runtime === 'node' && tags.napi\r\n}\r\n\r\nfunction compareTags (runtime) {\r\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\r\n  return function (a, b) {\r\n    if (a.runtime !== b.runtime) {\r\n      return a.runtime === runtime ? -1 : 1\r\n    } else if (a.abi !== b.abi) {\r\n      return a.abi ? -1 : 1\r\n    } else if (a.specificity !== b.specificity) {\r\n      return a.specificity > b.specificity ? -1 : 1\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\nfunction isNwjs () {\r\n  return !!(process.versions && process.versions.nw)\r\n}\r\n\r\nfunction isElectron () {\r\n  if (process.versions && process.versions.electron) return true\r\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\r\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\r\n}\r\n\r\nfunction isAlpine (platform) {\r\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\r\n}\r\n\r\n// Exposed for unit tests\r\n// TODO: move to lib\r\nload.parseTags = parseTags\r\nload.matchTags = matchTags\r\nload.compareTags = compareTags\r\nload.parseTuple = parseTuple\r\nload.matchTuple = matchTuple\r\nload.compareTuples = compareTuples\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/node_modules/node-gyp-build/node-gyp-build.js\n");

/***/ })

};
;